// Generated by dojo-bindgen on Mon, 24 Mar 2025 20:08:33 +0000. Do not modify this file manually.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "DojoModule.h"
#include "Account.h"
#include "GeneratedHelpers.generated.h"

UCLASS(BlueprintType)
class UDojoModel : public UObject
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString DojoModelType;
};

    
UENUM(BlueprintType)
enum class EDDirection : uint8
{
    Left = 0,
    Right = 1,
    Up = 2,
    Down = 3,
};


// Model definition for `dojo_starter::models::DirectionsAvailable` model
UCLASS(BlueprintType)
class UDojoModelDojoStarterDirectionsAvailable : public UDojoModel
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString Player;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    TArray<EDDirection> Directions;
};



// Model definition for `dojo_starter::models::Moves` model
UCLASS(BlueprintType)
class UDojoModelDojoStarterMoves : public UDojoModel
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString Player;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    int Remaining;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    EDDirection LastDirection;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    bool CanMove;
};


// Type definition for `dojo_starter::models::Vec2` struct
USTRUCT(BlueprintType)
struct FVec2
{
    GENERATED_BODY()

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    int X;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    int Y;
};


// Model definition for `dojo_starter::models::Position` model
UCLASS(BlueprintType)
class UDojoModelDojoStarterPosition : public UDojoModel
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString Player;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FVec2 Vec;
};

UCLASS()
class AGeneratedHelpers : public AActor
{
    GENERATED_BODY()

private:
    ToriiClient *toriiClient;

    static const TMap<FString, FString> ContractsAddresses;

    bool subscribed;

    struct Subscription *subscription;

    static AGeneratedHelpers* Instance;

    void ControllerAccountCallback(ControllerAccount *account);

    static void ControllerCallbackProxy(ControllerAccount *account);

    static void CallbackProxy(struct FieldElement key, struct CArrayStruct models);

    UDojoModel* parseDojoStarterDirectionsAvailableModel(struct Struct* model);
    UDojoModel* parseDojoStarterMovesModel(struct Struct* model);
    UDojoModel* parseDojoStarterPositionModel(struct Struct* model);

    void ParseModelsAndSend(struct CArrayStruct *models);

    void ExecuteFromOutside(const FControllerAccount& account,
                            const FString& to,
                            const FString& selector,
                            const FString& calldataParameter);

    void ExecuteRawDeprecated(const FAccount& account,
                              const FString& to,
                              const FString& selector,
                              const FString& calldataParameter);

public:
    AGeneratedHelpers();
    ~AGeneratedHelpers();

    AGeneratedHelpers* GetGlobalInstance();
    void SetGlobalInstance(AGeneratedHelpers* instance);

    UFUNCTION(BlueprintCallable)
    void Connect(const FString& torii_url, const FString& world);

    UFUNCTION(BlueprintCallable)
    void FetchExistingModels();

    UFUNCTION(BlueprintCallable)
    void SubscribeOnDojoModelUpdate();

    UFUNCTION(BlueprintCallable)
    FAccount CreateAccountDeprecated(const FString& rpc_url,
                                     const FString& address,
                                     const FString& private_key);

    UFUNCTION(BlueprintCallable)
    FAccount CreateBurnerDeprecated(const FString& rpc_url,
                                    const FString& address,
                                    const FString& private_key);

    DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnDojoModelUpdated, UDojoModel*, Model);

    UPROPERTY(BlueprintAssignable)
    FOnDojoModelUpdated OnDojoModelUpdated;

    // CONTROLLER
    UFUNCTION(BlueprintCallable)
    void ControllerGetAccountOrConnect(const FString& rpc_url, const FString& chain_id);

    DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnDojoControllerAccount,
                                                struct FControllerAccount,
                                                Account);

    UPROPERTY(BlueprintAssignable)
    FOnDojoControllerAccount FOnDojoControllerAccount;

    // CALLS
    
    UFUNCTION(BlueprintCallable, Category = "Calls")
    void CallDojoStarterActionsSpawn(const FAccount& account);

    UFUNCTION(BlueprintCallable, Category = "Controller Calls")
    void CallControllerDojoStarterActionsSpawn(const FControllerAccount& account);

    UFUNCTION(BlueprintCallable, Category = "Calls")
    void CallDojoStarterActionsMove(const FAccount& account, EDDirection direction, FVec2 target, TArray<int> randomvalues);

    UFUNCTION(BlueprintCallable, Category = "Controller Calls")
    void CallControllerDojoStarterActionsMove(const FControllerAccount& account, EDDirection direction, FVec2 target, TArray<int> randomvalues);

};
